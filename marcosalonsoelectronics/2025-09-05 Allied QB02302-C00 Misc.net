* C:\GitHub\LTspice-simulations\marcosalonsoelectronics\2025-09-05 Allied QB02302-C00 Misc.asc
* Generated by LTspice 24.1.4 for Windows.
X§Us1 g1 dc Pha switch Ron=10m Roff=10meg Vt=0.5 Vh=-0.2
X§Us0 g0 Pha 0 switch Ron=10m Roff=10meg Vt=0.5 Vh=-0.2
X§Us3 g3 dc Phb switch Ron=10m Roff=10meg Vt=0.5 Vh=-0.2
X§Us2 g2 Phb 0 switch Ron=10m Roff=10meg Vt=0.5 Vh=-0.2
X§Us5 g5 dc Phc switch Ron=10m Roff=10meg Vt=0.5 Vh=-0.2
X§Us4 g4 Phc 0 switch Ron=10m Roff=10meg Vt=0.5 Vh=-0.2
Vdc dc 0 {DC_bus_voltage}
X§U5 N008 N007 N006 0 0 N005 N014 N012 N009 N019 N018 N013 N010 N016 VCC 0 74HC138 VCC=5 SPEED=1.0 TRIPDT=1e-9
X§U3 N005 Constant K=5
A0 0 0 N010 N009 0 g0 0 0 AND
A1 0 0 N013 N012 0 N011 0 0 AND
X§Ud1 Pha dc idiode Vfwd=10m Ron=10m Vrev=10k Roff=1meg
X§Ud0 0 Pha idiode Vfwd=10m Ron=10m Vrev=10k Roff=1meg
X§Ud2 0 Phb idiode Vfwd=10m Ron=10m Vrev=10k Roff=1meg
X§Ud3 Phb dc idiode Vfwd=10m Ron=10m Vrev=10k Roff=1meg
X§Ud5 Phc dc idiode Vfwd=10m Ron=10m Vrev=10k Roff=1meg
X§Ud4 0 Phc idiode Vfwd=10m Ron=10m Vrev=10k Roff=1meg
X§U2 N001 N002 N003 N004 ea eb ec N006 N007 N008 Te w wrpm thetarot nr bldcm R=1.99 L=1.84e-3 M=0 npp=3 Kv=.0799 To=0 J=2.2e-5 Bv=0.00022
X§U1 Pha N001 ia isense k=1
A2 0 0 N012 N014 0 g2 0 0 AND
A3 0 0 N016 N010 0 N015 0 0 AND
A4 0 0 N016 N013 0 g4 0 0 AND
A5 0 0 N009 N014 0 N017 0 0 AND
X§U6 Phb N002 ib isense k=1
X§U7 Phc N003 ic isense k=1
X§U9 tri Sawtooth Vlow=0 Vhigh=1 f=10k
X§U10 comp tri pwm comp Vhigh=1 Vlow=0
A6 0 pwm N011 0 0 0 g1 0 AND
A7 0 pwm N015 0 0 0 g3 0 AND
A8 0 pwm N017 0 0 0 g5 0 AND
X§U13 6 comp Limiter vth=0.99 vtl=0
R3 N004 Tload 1
V§Tload1 Tload 0 {Rated_Torque}
V§SpeedTarget N021 0 {SpeedTarget}
X§U8 wrpm 11 Gain A=1e-3
EERROR1 2 0 N021 12 1.0
C1 4 0 1
L1 5 0 1
BPID1 6 0 V=( Kp*v(3) + Ki*v(4) + Kd*v(5) )
R1 4 0 1e6
RP3 12 11 1k
CP2 12 0 1µF
EP1 3 0 2 0 1.0
GI1 0 4 2 0 1.0
GD1 0 5 2 0 1.0
RP4 3 0 1e6
X§U12 target_diff N020 pid_comp k={Kp} tau_i=1/{Ki} tau_d={Kd}
X§U4 w Te Power_elec mul
X§U11 N004 w Power_mech mul
.tran 0 100m 20m uic
.inc 74HC.lib
.options reltol=1
* 74HC138
* Allied Motion Quantum NEMA 23\nQB02302-C00\nhttps://allient.com/d/?h=e4564e2#docs&src=https://undefined\n2025-09-03 Allient-Brushless-DC-Motors-Quantum-NEMA-Series-23-11212024.pdf\n \nDelta winding, which does NOT match the LTspice model\n \nIteratively found that Kv = .0799, when run with a range of torques...\nthen plotted Te_rms versus ia_rms so that the slope is the Torque Constant and matches the 0.198 Nm/A from the datasheet.\n(do not currently have a theoretical basis for this value...perhaps because the model is based on a WYE winding?)\niterated with duty cycle hard wired to 100% \n \nLTspice model\nhttps://www.youtube.com/watch?v=i4hok5Mow5U&t=1014s minute 6:20 shows units\nhttps://www.youtube.com/watch?v=UEygOGviE2k\nhttps://github.com/marcosalonsoelectronics\n \nKv = phase back-emf coefficient (V/rad/s) --> Va = Kv * w\nVA is the amplitude of the back-emf trapezoidal output in each phase\nline back-emfs --> eab, ebc, eca, their amplitude is twice that of phase back-emf\n \nR = series resitance, phase resistance (NOT line-to-line terminal resistance)\nFor a dc motor measure the resistance between the 2 armature wires.\nIf it is a WYE connected BLDC motor, the resistance is the line-to-line resistance. Thus divide the resistance (l-l) by 2 to get the phase resistance.\nFor a DELTA winding terminal resistance should equal phase resistance directly.\n \nL = self inductance of windings (NOT line-to-line terminal inductance)\nLike resistance, for a WYE winding the phase L used in this model should be half of the line-to-line value reported on the datasheet\nFor a DELTA winding terminal inductance should equal phase resistance directly.\n \nBv = viscous fricton coefficient (kg m^2/s)\nTo = no load torque\nnpp = number of pole pairs\nSince there is no datasheet item for Bv, after setting R & L from the datasheet and iteratively finding Kv, I set load to 0.57Nm (rated torque) then\nadjusted Bv until steady state speed matched the rated speed (~5550 rpm) and the RMS value for phase current (ia, ib, or ic) matched the data sheet's rated phase current value (~3.6Arms)\niterated with duty cycle hard wired to 100%\n \nM = mutual inductance of the windings\n \ntheta (radians)\nJ = moment of inertia (kg m^2)\nnr = total number of rotor revolutions\ntheta = rotation angle (rad)\nw = output speed (rad/s)\nf = pwm frequency (Hz)\nea, eb, ec = back emf\n \ntau_e (ms) = circuit inductance (mH) / circuit resistance (Ohms)
* decoder to do the driving
* added to improved convergence but doesn't have significant effect on results\nhttps://www.youtube.com/watch?v=Pc76zFAWCsE&t=928s (22:54)
* sawtooth waveform generator
.measure wrpm_avg avg V(wrpm)
.measure Te_avg avg V(Te)
.measure Te_rms rms V(Te)
.measure ia_rms rms V(ia)
.measure w_avg avg V(w)
.measure Pin avg V(dc)*(-I(Vdc))
.measure Pout param Rated_Torque*w_avg
.measure Eff param Pout*100/Pin
* Nm
* rpm/1000
* assume gain of tachometer is .001 V/rpm\n(small number seems to help with convergence)
.param Rated_Torque=0.57
* SENSOR
* INTEGRATOR
* DIFFERENTIATOR
* PROPORTIONAL
.param Kp=2
.param Ki=40
.param Kd=0.001
* SET POINT
* ERROR
* SENSOR TIME-LAG
* PID SUM
.param SpeedTarget = 5
* .step param Rated_Torque 0 1 .1
.param DC_bus_voltage=130
* 1 is 100% duty cycle (99%), 0.5 is 50% duty cycle, 0 is 0% duty cycle
* .step param Kd 0 .005 .0002
* alternative approach would be to use the pid component from marcosalonsoelectronics
* pid component from eCircuitCenter
* to ensure value always falls within the sawtooth waveform
* RC circuit low-pass filter\nthese values have cutoff frequency of ~160Hz\nlower frequencies pass unimpeded\ndon't need to feed a bunch of ripple back into the PID controller\nchanging this filter requires readjusting the PID gains
* rpm/1000
* Te = electromagnetic torque (Nm)
* efficiency = Pout / Pin\nPout = Tload * w\nPin = Vdc * Idc
* Pin calculations are messy with PID and PWM speed control active
.lib BLDCM.lib
.lib Control.lib
.backanno
.end
