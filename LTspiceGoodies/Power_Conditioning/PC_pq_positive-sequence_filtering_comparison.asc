Version 4
SHEET 1 3544 29212
WIRE 544 80 512 80
WIRE 704 80 624 80
WIRE 896 80 784 80
WIRE 944 80 896 80
WIRE 976 80 944 80
WIRE 1008 80 976 80
WIRE 1216 80 1120 80
WIRE 80 96 32 96
WIRE 128 96 80 96
WIRE 400 96 240 96
WIRE 512 96 512 80
WIRE 512 96 400 96
WIRE 80 128 32 128
WIRE 128 128 80 128
WIRE 400 128 240 128
WIRE 512 128 400 128
WIRE 512 144 512 128
WIRE 608 144 512 144
WIRE 736 144 736 112
WIRE 736 144 688 144
WIRE 80 160 32 160
WIRE 128 160 80 160
WIRE 976 208 976 80
WIRE 1008 208 976 208
WIRE 1216 208 1120 208
WIRE 544 256 432 256
WIRE 576 256 576 112
WIRE 576 256 544 256
WIRE 464 320 432 320
WIRE 544 320 512 320
WIRE 640 320 640 176
WIRE 640 320 544 320
WIRE 976 336 976 208
WIRE 1008 336 976 336
WIRE 1216 336 1120 336
WIRE 976 464 976 336
WIRE 1008 464 976 464
WIRE 1216 464 1120 464
WIRE 976 592 976 464
WIRE 1008 592 976 592
WIRE 1216 592 1120 592
WIRE 1104 640 1104 624
WIRE 1088 656 1088 624
WIRE 1072 672 1072 624
WIRE 976 752 976 592
WIRE 1008 752 976 752
WIRE 1216 752 1120 752
WIRE 1104 800 1104 784
WIRE 1088 816 1088 784
WIRE 1072 832 1072 784
WIRE 976 912 976 752
WIRE 1008 912 976 912
WIRE 1216 912 1120 912
WIRE 1104 960 1104 944
WIRE 1088 976 1088 944
WIRE 1072 992 1072 944
FLAG -64 128 0
FLAG 1216 336 Bessel
IOPIN 1216 336 Out
FLAG 1216 80 Butterworth
IOPIN 1216 80 Out
FLAG 1216 208 Cauer
IOPIN 1216 208 Out
FLAG 1216 464 MovingAverage
IOPIN 1216 464 Out
FLAG 944 80 p`
FLAG 80 96 a
FLAG 80 128 b
FLAG 80 160 c
FLAG 400 96 alfa
FLAG 400 128 beta
FLAG 544 256 sin
FLAG 544 320 -cos
FLAG 896 160 0
FLAG 1216 592 Kaiser
IOPIN 1216 592 Out
FLAG 1008 112 0
FLAG 1008 240 0
FLAG 1008 368 0
FLAG 1008 496 0
FLAG 1008 624 0
FLAG 1216 752 Gaussian
IOPIN 1216 752 Out
FLAG 1008 784 0
FLAG 1040 112 f0
FLAG 1040 240 f0
FLAG 1040 368 f0
FLAG 1040 496 f0
FLAG 1040 624 f0
FLAG 1040 784 f0
FLAG 1216 912 mod_Bartlett
IOPIN 1216 912 Out
FLAG 1008 944 0
FLAG 1040 944 f0
DATAFLAG 1072 656 ""
DATAFLAG 1072 816 ""
DATAFLAG 1072 976 ""
SYMBOL 3ph_gen -16 128 R0
SYMATTR InstName U1
SYMATTR SpiceLine h1=3 h2=9 h3=0 phi1=0 phi2=-pi/8 phi3=0
SYMATTR Value2 dc1=0.1 dc2=0 dc3=0 A1=1 A2=1 A3=1.1
SYMATTR Value sym=1 f=f amp=sqrt(2/3) phi=0 Ro=1 N=19
SYMATTR SpiceLine2 a=1 b=0.5 c=0 d=0 e={pi/2} p=1 q=0 xp=1.8 xq=1
SYMBOL Gain 480 320 R0
WINDOW 39 -28 36 Left 2
SYMATTR InstName U6
SYMBOL current 896 80 R0
WINDOW 0 40 55 Left 2
SYMATTR InstName I1
SYMATTR Value ac 1
SYMBOL Filter 1072 336 R0
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=40 N=4
SYMATTR SpiceLine f0=10k fp1=15 fs1={2*fp} fp2=0 fs2=0
SYMATTR InstName U3
SYMBOL Filter 1072 80 R0
SYMATTR SpiceModel Butterworth_IIR
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=40 N=3  tr={tr} td={td}
SYMATTR SpiceLine f0=f0 fp1={fp} fs1=1k fp2=0 fs2=0
SYMATTR InstName U5
SYMATTR Value2 Win=1 Func=1 sim=1 SH={SH} Norm=1
SYMBOL Filter 1072 208 R0
SYMATTR SpiceModel Cauer_IIR
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=80 N=2  tr={tr} td={td}
SYMATTR SpiceLine f0={-f0} fp1={fp} fs1=1k fp2=0 fs2=0
SYMATTR InstName U7
SYMATTR Value2 Win=1 Func=1 sim=1 SH={SH} Norm=1
SYMBOL Filter 1072 464 R0
SYMATTR SpiceModel FIR
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=40 N=80  tr={tr} td={td}
SYMATTR SpiceLine f0={-f0} fp1=1 fs1=50 fp2=0 fs2=0
SYMATTR InstName U8
SYMATTR Value2 Win=0 Func=0 sim=1 SH={SH} Norm=1
SYMBOL Filter 1072 592 R0
SYMATTR SpiceModel FIR
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=32 N=0  tr={tr} td={td}
SYMATTR Value sigma=1 nT=0 Zin=1 Zout=1
SYMATTR SpiceLine f0={-f0} fp1=1m fs1=46.5 fp2=0 fs2=0
SYMATTR InstName U9
SYMATTR Value2 Win=19 Func=1 sim=0.3 SH=SH Norm=1
SYMBOL Transforms 176 128 R0
SYMATTR InstName U10
SYMBOL Math2r 576 80 R0
SYMATTR SpiceModel x
SYMATTR InstName U2
SYMBOL Math2r 640 144 R0
SYMATTR SpiceModel x
SYMATTR InstName U11
SYMBOL Math2r 736 80 R0
SYMATTR SpiceModel +
SYMATTR InstName U12
SYMBOL SpecialFunctions\\modulate2 288 256 R0
WINDOW 0 1 114 Left 2
SYMATTR InstName APLL
SYMATTR SpiceLine mark={f} space=1
SYMBOL Filter 1072 752 R0
SYMATTR SpiceModel FIR
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=32 N=128  tr={tr} td={td}
SYMATTR Value sigma=0.91 nT=0 Zin=1 Zout=1
SYMATTR SpiceLine f0={-f0} fp1=1m fs1=50 fp2=0 fs2=0
SYMATTR InstName U4
SYMATTR Value2 Win=13 Func=1 sim=0.3 SH=SH Norm=1
SYMBOL Filter 1072 912 R0
SYMATTR SpiceModel customFIR
SYMATTR SpiceLine2 G=1 Asc=3 Ap=1 As=32 N=161  tr={tr} td={td}
SYMATTR Value sigma=7 nT=0 Zin=1 Zout=1
SYMATTR SpiceLine f0={-f0} fp1=1m fs1=50 fp2=0 fs2=0
SYMATTR InstName U13
SYMATTR Value2 Win=0 Func=0 sim=0.3 SH=SH Norm=1
TEXT 1464 -72 Left 2 !.param  f=49\n+  fp=10\n+  SH=1 f0=4096
TEXT 2248 -48 Left 2 ;.ac dec 999 1 1k
TEXT 856 32 Left 2 !.ic v(p`)=0
TEXT 192 -368 Left 4 ;Positive sequence filtering comparison
TEXT -248 376 Left 2 ;Grid side with distorted/unbalanced\nwaveforms and the Clarke matrix.
TEXT 296 408 Left 2 ;Unity, reference sin/cos
TEXT 296 40 Left 2 ;Calculation of powers for removal.
TEXT 1464 296 Left 2 ;The Bessel and the Gaussian filters are the most appropiate in time-domain. Here, the\nBessel has a settling time of ~42ms. Since we're dealing with DC information (power) and\nits variation in time, this is one of the criterias, but the disadvantage lies in the fact that\nthey need higher orders than other filters.
TEXT 1464 40 Left 2 ;The Butterworth is preferred for its simplicity, however, it overshoots meaning the settling\ntime at ~99% is, as can be seen in this case, ~150ms, which means the APF will have to\nsustain the oscillation of power with its DC storage device for 150ms, not to mention how\nthis is seen from the grid side (wattmeter). The IIR version is identical, only sampled.
TEXT -240 224 Left 2 ;"A" phase has 0.1V offset\n"B" phase has -pi/8 displacement\n"C" phase has 1.1 p.u. amplitude\nIn addition: up to 19th odd harmonics.
TEXT 856 -120 Left 2 ;Cutt-off frequency has been chosen the same for all filters.\nThe orders have been kept to a minimum.\nThe final DC value is 1.008V  =>\n+1% = 997.92mV\n-1% = 1.01808V
TEXT 1464 168 Left 2 ;The Cauer filter is provided here as a pleasant surprise: it overshoots more yet has the\ngroup delay, but not the settling time, less than the Butterworth filter, because of the\nzero(es); also because of them it has slightly more ripple. Still, it overshoots, so it isn't the\nright choice.
TEXT 1464 424 Left 2 ;The moving-average filter is the ideal one, both time- and frequency-domain, provided\nthe sampling period matches the working frequency (half works, too, but only for cleaner\nbalanced waveforms [#] ). However, it's very sensitive to frequency deviations, as can be\nseen in this case: f0=4096Hz and N=80.
TEXT 400 -320 Left 2 ;(part of the pq-theory)
TEXT 96 -280 Left 2 ;Some filtering approaches for a pq positive-sequence detection block. There are both\nanalog and digital filters, side by side.
TEXT 1456 1080 Left 2 ;[#] If there's a clean input, the resulting output will be sin^2+cos^2=1, no filtering needed;\nif there's clean input with the same "phi" displacement for all phases, the output is cos(phi),\nagain, no filtering needed; if only one or two phases are displaced, the sum of squares will\ngive a signal twice the period of the mains hence the MAF only needs 0.5/f samples; but if,\nas is the case now, there is offset present, then the resulting sum will have dominant mains\nfrequency peaks (and not only) on top of the double frequency sum, meaning the MAF\nshould have a 1/f period of averaging.
TEXT 2248 -80 Left 2 !.tran .3
TEXT 1464 552 Left 2 ;Next is a Kaiser window, which performs admirably because of a small trick: a large\nimposed transit window. Its value is chosen such that the first zero is at ~50Hz, meaning\nthat the attenuation is actually larger than imposed. The sampling frequency is chosen\nto be the same 4096Hz and the order M=19 (see lower-left pin) => settling time = ~34ms.
TEXT 2248 -16 Left 2 !.param tripdv=0 tripdt=0
TEXT 1680 -72 Left 2 ;grid's frequency (change to 47.5 for a worst-case)\nfilters' cut-off frequency\n0 disables, 1 enables S&H for the digital filters
TEXT 856 1072 Left 2 !.param tr=1m/f0 td=0.2495/f0
TEXT 1464 712 Left 2 ;The same trick with the transition width is applied to a Gaussian window where manual\ntweaking lead to a 128th order filter with its distribution factor sigma=0.91. The results are\nfaster settling time (~29.9ms) and just a little bit higher ripple than Kaiser.
TEXT 2536 -64 Left 2 !.save V(p`) v(f0)\n+ V(Butterworth)\n+ V(Cauer)\n+ V(Bessel)\n+ V(MovingAverage)\n+ V(Kaiser)\n+ V(Gaussian)\n+ V(mod_Bartlett)
TEXT 1200 712 Left 2 ;0.244% ripple
TEXT 1200 552 Left 2 ;0.18% ripple
TEXT 1200 424 Left 2 ;1.11% ripple
TEXT 1200 296 Left 2 ;0.617% ripple
TEXT 1200 168 Left 2 ;0.539% ripple
TEXT 1200 40 Left 2 ;0.141% ripple
TEXT 1200 872 Left 2 ;0.0526% ripple(!)
TEXT 1464 880 Left 2 ;The best attenuation, so far, is achieved with a weighted moving average, a modified\nBartlett window with an additional offset -- adjustable as {sigma} here -- which gives two\nextra zeroes instead of one and concentrated around the frequency of interest (50Hz\n+/- ~5%). This ensures that even with an input frequency drift the attenuation stays the\nsame or better (~1.05mV@47.5Hz). The price to pay is ~2ms extra delay in the settling\ntime, compared to the Kaiser, but the ripple is much lower.
TEXT 1008 1120 Left 2 !.lib customFIR.sub
LINE Normal 2352 144 1008 144 2
LINE Normal 2352 272 1008 272 2
LINE Normal 2352 400 1008 400 2
LINE Normal 2352 528 1008 528 2
LINE Normal 2352 688 1008 688 2
LINE Normal 2352 848 1008 848 2
RECTANGLE Normal 256 432 -256 16 2
RECTANGLE Normal 832 432 272 208 2
RECTANGLE Normal 832 192 272 16 2
RECTANGLE Normal 2496 1048 848 16 2
